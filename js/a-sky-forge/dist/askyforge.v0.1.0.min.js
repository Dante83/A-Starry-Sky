var cloner=function(O){"use strict";var VALUE="value",PROTO="__proto__",isArray=Array.isArray,create=O.create,dP=O.defineProperty,dPs=O.defineProperties,gOPD=O.getOwnPropertyDescriptor,gOPN=O.getOwnPropertyNames,gOPS=O.getOwnPropertySymbols||function(o){return Array.prototype},gPO=O.getPrototypeOf||function(o){return o[PROTO]},hOP=O.prototype.hasOwnProperty,oKs=typeof Reflect!==typeof oK&&Reflect.ownKeys||function(o){return gOPS(o).concat(gOPN(o))},set=function(descriptors,key,descriptor){if(key in descriptors)dP(descriptors,key,{configurable:true,enumerable:true,value:descriptor});else descriptors[key]=descriptor},index=-1,known=null,blown=null,clean=function(){known=blown=null},New=function(source,descriptors){var out=isArray(source)?[]:create(gPO(source));return descriptors?Object.defineProperties(out,descriptors):out},deepCopy=function deepCopy(source){var result=New(source);known=[source];blown=[result];deepDefine(result,source);clean();return result},deepMerge=function(target){known=[];blown=[];for(var i=1;i<arguments.length;i++){known[i-1]=arguments[i];blown[i-1]=target}merge.apply(true,arguments);clean();return target},shallowCopy=function shallowCopy(source){clean();for(var key,descriptors={},keys=oKs(source),i=keys.length;i--;set(descriptors,key,gOPD(source,key)))key=keys[i];return New(source,descriptors)},shallowMerge=function(){clean();return merge.apply(false,arguments)},isObject=function isObject(value){return value!=null&&typeof value==="object"},shouldCopy=function shouldCopy(value){index=-1;if(isObject(value)){if(known==null)return true;index=known.indexOf(value);if(index<0)return 0<known.push(value)}return false},deepDefine=function deepDefine(target,source){for(var key,descriptor,descriptors={},keys=oKs(source),i=keys.length;i--;){key=keys[i];descriptor=gOPD(source,key);if(VALUE in descriptor)deepValue(descriptor);set(descriptors,key,descriptor)}dPs(target,descriptors)},deepValue=function deepValue(descriptor){var value=descriptor[VALUE];if(shouldCopy(value)){descriptor[VALUE]=New(value);deepDefine(descriptor[VALUE],value);blown[known.indexOf(value)]=descriptor[VALUE]}else if(-1<index&&index in blown){descriptor[VALUE]=blown[index]}},merge=function merge(target){for(var source,keys,key,value,tvalue,descriptor,deep=this.valueOf(),descriptors={},i,a=1;a<arguments.length;a++){source=arguments[a];keys=oKs(source);for(i=0;i<keys.length;i++){key=keys[i];descriptor=gOPD(source,key);if(hOP.call(target,key)){if(VALUE in descriptor){value=descriptor[VALUE];if(shouldCopy(value)){descriptor=gOPD(target,key);if(VALUE in descriptor){tvalue=descriptor[VALUE];if(isObject(tvalue)){merge.call(deep,tvalue,value)}}}}}else{if(deep&&VALUE in descriptor){deepValue(descriptor)}}set(descriptors,key,descriptor)}}return dPs(target,descriptors)};return{deep:{copy:deepCopy,merge:deepMerge},shallow:{copy:shallowCopy,merge:shallowMerge}}}(Object);AFRAME.registerShader("sky",{schema:{uTime:{type:"number",default:.005,min:0,max:.1,is:"uniform"},luminance:{type:"number",default:1,max:0,min:2,is:"uniform"},turbidity:{type:"number",default:2,max:0,min:20,is:"uniform"},reileigh:{type:"number",default:1,max:0,min:4,is:"uniform"},mieCoefficient:{type:"number",default:.005,min:0,max:.1,is:"uniform"},mieDirectionalG:{type:"number",default:.8,min:0,max:1,is:"uniform"},sunPosition:{type:"vec2",default:{x:0,y:0},is:"uniform"},moonTexture:{type:"map",src:"../images/moon-dif-1024.png",is:"uniform"},moonNormalMap:{type:"map",src:"../images/moon-nor-1024-padded.png",is:"uniform"},moonTangentSpaceSunlight:{type:"vec3",default:{x:0,y:0,z:0},is:"uniform"},moonPosition:{type:"vec3",default:{x:0,y:0,z:0},is:"uniform"},moonTangent:{type:"vec3",default:{x:0,y:0,z:0},is:"uniform"},moonBitangent:{type:"vec3",default:{x:0,y:0,z:0},is:"uniform"},starMask:{type:"map",src:"../images/padded-starry-sub-data-0.png",is:"uniform"},starRas:{type:"map",src:"../images/padded-starry-sub-data-1.png",is:"uniform"},starDecs:{type:"map",src:"../images/padded-starry-sub-data-2.png",is:"uniform"},starMags:{type:"map",src:"../images/padded-starry-sub-data-3.png",is:"uniform"},starColors:{type:"map",src:"../images/padded-starry-sub-data-4.png",is:"uniform"},latLong:{type:"vec2",default:{x:0,y:0},is:"uniform"},hourAngle:{type:"number",default:0,is:"uniform"},localSiderealTime:{type:"number",default:0,is:"uniform"},u_resolution:{type:"vec2",default:{x:1280,y:720},is:"uniform"}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","precision mediump int;","#endif","uniform float uTime;","varying vec3 vWorldPosition;","uniform vec2 u_resolution;","uniform float luminance;","uniform float turbidity;","uniform float reileigh;","uniform float mieCoefficient;","uniform float mieDirectionalG;","const float n = 1.0003; ","const float N = 2.545E25; ","const float pn = 0.035;  ","const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);","const vec3 K = vec3(0.686, 0.678, 0.666);","const float v = 4.0;","const float rayleighZenithLength = 8.4E3;","const float mieZenithLength = 1.25E3;","const vec3 up = vec3(0.0, 1.0, 0.0);","const float EE = 1000.0;","const float e = 2.71828182845904523536028747135266249775724709369995957;","const float pi = 3.141592653589793238462643383279502884197169;","const float piTimes2 = 6.283185307179586476925286766559005768394338798750211641949;","const float piOver2 = 1.570796326794896619231321691639751442098584699687552910487;","const float deg2Rad = 0.017453292519943295769236907684886127134428718885417254560;","const float cutoffAngle = pi/1.95;","const float steepness = 1.5;","uniform sampler2D starMask;","uniform sampler2D starRas;","uniform sampler2D starDecs;","uniform sampler2D starMags;","uniform sampler2D starColors;","const int starDataImgWidth = 512;","const int starDataImgHeight = 256;","const float starRadiusMagnitudeMultiplier = 0.01;","const int starOffsetBorder = 5;","uniform mediump vec2 sunPosition;","const float angularRadiusOfTheSun = 0.0245; ","varying vec3 normal;","varying vec2 binormal;","uniform sampler2D moonTexture;","uniform sampler2D moonNormalMap;","uniform vec3 moonTangentSpaceSunlight;","uniform vec3 moonPosition;","uniform vec3 moonTangent;","uniform vec3 moonBitangent;","const float angularRadiusOfTheMoon = 0.024;","const float earthshine = 0.02;","uniform vec2 latLong;","uniform float localSiderealTime;","float map(float value, float inMin, float inMax, float outMin, float outMax) {","return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);","}","int modulo(float a, float b){","return int(a - (b * floor(a/b)));","}","float fModulo(float a, float b){","return (a - (b * floor(a / b)));","}","float rand(float x){","float a = 12.9898;","float b = 78.233;","float c = 43758.5453;","float dt= dot(vec2(x, x) ,vec2(a,b));","float sn= mod(dt,3.14);","return fract(sin(sn) * c);","}","vec2 getRaAndDec(float az, float alt){","float declination = asin(sin(latLong.x) * sin(alt) - cos(latLong.x) * cos(alt) * cos(az));","float hourAngle = atan(sin(az), (cos(az) * sin(latLong.x) + tan(alt) * cos(latLong.x)));","float rightAscension = fModulo(localSiderealTime - hourAngle, piTimes2);","return vec2(rightAscension, declination);","}","float rgba2Float(vec4 colorIn){","vec4 colorIn255bits = floor(colorIn * 255.0);","int floatSign = (modulo(colorIn255bits.a, 2.0)) == 0 ? -1 : 1;","float floatExponential = float(((int(colorIn255bits.a)) / 2) - 64);","float floatValue = float(floatSign) * (colorIn255bits.r * 256.0 * 256.0 + colorIn255bits.g * 256.0 + colorIn255bits.b) * pow(10.0, floatExponential);","return floatValue;","}","vec3 haversineDistance(float az_0, float alt_0, float az_1, float alt_1){","float deltaAZ = az_0 - az_1;","float compliment = -1.0 * max(2.0 * pi - abs(deltaAZ), 0.0) * sign(deltaAZ);","deltaAZ = abs(deltaAZ) < abs(compliment) ? deltaAZ : compliment;","float deltaAlt = alt_1 - alt_0;","float sinOfDeltaAzOver2 = sin(deltaAZ / 2.0);","float sinOfDeltaAltOver2 = sin(deltaAlt / 2.0);","float haversineDistance = 2.0 * asin(sqrt(sinOfDeltaAltOver2 * sinOfDeltaAltOver2 + cos(alt_0) * cos(alt_1) * sinOfDeltaAzOver2 * sinOfDeltaAzOver2));","return vec3(deltaAZ, deltaAlt, haversineDistance);","}","vec4 clipImageWithAveragedEdge(vec4 imageColor, vec4 backgroundColor){","return imageColor.a > 0.95 ? vec4(imageColor.rgb, 1.0) : vec4(mix(imageColor.xyz, backgroundColor.xyz, (1.0 - imageColor.w)), 1.0);","}","vec4 mixSunLayer(vec4 sun, vec4 stars){","if(sqrt(clamp(dot(sun.xyz, sun.xyz)/3.0, 0.0, 1.0)) > 0.10){","return sun.a > 0.95 ? vec4(sun.rgb, 1.0) : vec4(mix(sun.xyz, stars.xyz, (1.0 - sun.w)), 1.0);","}","return stars;","}","struct skyWithAndWithoutStars{","vec4 starLayer;","vec4 starlessLayer;","};","skyWithAndWithoutStars starLayerBlending(vec4 starColor, vec4 skyColor, float sunE){","vec4 starColorRGB = vec4(starColor.rgb, 1.0);","vec4 starColorMag = starColorRGB * starColorRGB;","vec4 skyColorRGB = vec4(skyColor.rgb, 1.0);","vec4 skyColorMag = skyColorRGB * skyColorRGB;","vec4 starlessLight = skyColor;","vec4 combinedLight = sqrt(starColorMag * (1.0 - clamp(sunE / 150.0, 0.0, 1.0)) + skyColorMag);","return skyWithAndWithoutStars(combinedLight, starlessLight);","}","vec4 moonLayerBlending(vec4 moonColor, vec4 skyColor, vec4 inColor){","vec4 moonColorRGB = vec4(moonColor.rgb, 1.0);","vec4 moonColorMag = moonColorRGB * moonColorRGB;","vec4 skyColorRGB = vec4(skyColor.rgb, 1.0);","vec4 skyColorMag = skyColorRGB * skyColorRGB;","vec4 combinedLight = clamp(sqrt(moonColorMag + skyColorMag), 0.0, 1.0);","return moonColor.a > 0.95 ? vec4(combinedLight.rgb, 1.0) : vec4(mix(combinedLight.rgb, inColor.xyz, (1.0 - moonColor.a)), 1.0);","}","vec4 drawMoonLayer(float azimuthOfPixel, float altitudeOfPixel){","float zenithOfPixel = piOver2 - altitudeOfPixel;","float pixelX = sin(zenithOfPixel) * cos(azimuthOfPixel);","float pixelY = sin(zenithOfPixel) * sin(azimuthOfPixel);","float pixelZ = cos(zenithOfPixel);","vec3 pixelPos = vec3(pixelX, pixelY, pixelZ);","vec3 vectorBetweenPixelAndMoon = pixelPos - moonPosition;","float deltaX = dot(vectorBetweenPixelAndMoon, moonTangent);","float deltaY = dot(vectorBetweenPixelAndMoon, moonBitangent);","float angleOfPixel = atan(deltaX, deltaY);","float radiusOfDistanceBetweenPixelAndMoon = length(vectorBetweenPixelAndMoon);","vec4 returnColor = vec4(0.0);","if(radiusOfDistanceBetweenPixelAndMoon < angularRadiusOfTheMoon){","float xPosition = (1.0 + (radiusOfDistanceBetweenPixelAndMoon / angularRadiusOfTheMoon) * sin(angleOfPixel)) / 2.0;","float yPosition = (1.0 + (radiusOfDistanceBetweenPixelAndMoon  / angularRadiusOfTheMoon) * cos(angleOfPixel)) / 2.0;","vec2 position = vec2(xPosition, yPosition);","vec4 moonColor = texture2D(moonTexture, position.xy);","vec3 moonSurfaceNormal = normalize(2.0 * texture2D(moonNormalMap, position.xy).rgb - 1.0);","moonColor = vec4(moonColor.rgb * max(earthshine, dot(moonSurfaceNormal, moonTangentSpaceSunlight)), moonColor.a);","returnColor = moonColor;","}","return returnColor;","}","vec4 drawStar(vec2 raAndDec, vec2 raAndDecOfStar, float magnitudeOfStar, vec3 starColor){","float maxRadiusOfStar = 1.4 * (2.0/360.0) * piTimes2;","float normalizedMagnitude = (7.96 - (magnitudeOfStar + 1.46)) / 7.96;","float radiusOfStar = clamp(maxRadiusOfStar * normalizedMagnitude, 0.0, maxRadiusOfStar);","float twinkleDust = 0.002;","float randSeed = uTime * twinkleDust * (1.0 + rand(rand(raAndDecOfStar.x) + rand(raAndDecOfStar.y)));","float rand_seed_floor = floor(randSeed);  ","float rand_seed_fraction = fract(randSeed);  ","float minBrightness = 0.4;","float maxBrightness = 1.0;","float rand_comp_a  = map(rand(rand_seed_floor), 0.0, 1.0, minBrightness, maxBrightness);","float rand_comp_b  = map(rand(rand(rand_seed_floor + 1.0)), 0.0, 1.0, minBrightness, maxBrightness);","float randomNess = mix(rand_comp_a, rand_comp_b, smoothstep(0.,1.,rand_seed_fraction));","radiusOfStar = radiusOfStar * randomNess;","vec3 positionData = haversineDistance(raAndDec.x, raAndDec.y, raAndDecOfStar.x, raAndDecOfStar.y);","vec4 returnColor = vec4(0.0);","if(positionData.z < radiusOfStar){","float lightness = exp(1.5 * 7.96 * ((radiusOfStar - positionData.z)/radiusOfStar)) / exp(1.5 * 7.96);","vec3 colorOfSky = vec3(0.1, 0.2, 1.0);","vec3 colorOfPixel = mix(mix(starColor, colorOfSky, (radiusOfStar - positionData.z)/(1.2 * radiusOfStar)), vec3(1.0), lightness);","returnColor = vec4(colorOfPixel, lightness);","}","return returnColor;","}","vec4 drawStarLayer(float azimuthOfPixel, float altitudeOfPixel, vec4 skyColor){","int padding = 5; ","int scanWidth = 2 * padding + 1;","int paddingSquared = scanWidth * scanWidth;","vec2 raAndDecOfPixel = getRaAndDec(azimuthOfPixel, altitudeOfPixel);","float pixelRa = raAndDecOfPixel.x;","float pixelDec = raAndDecOfPixel.y;","highp float activeImageWidth = float(starDataImgWidth - 2 * padding); ","highp float activeImageHeight = float(starDataImgHeight - 2 * padding); ","highp float normalizedRa = pixelRa / piTimes2;","highp float normalizedDec = (pixelDec + piOver2) / pi;","highp float startingPointX = activeImageWidth * normalizedRa;","highp float startingPointY = activeImageHeight * normalizedDec;","vec4 returnColor = vec4(skyColor);","for(highp int i = 0; i <= 10; ++i){","for(highp int j = 0; j <= 10; ++j){","highp float xLoc = startingPointX + float(i);","highp float yLoc = startingPointY + float(j);","highp vec2 searchPosition = vec2(xLoc / float(starDataImgWidth), yLoc / float(starDataImgHeight));","vec4 isStar = texture2D(starMask, searchPosition);","if(isStar.r > 0.0){","vec4 starRaColor = texture2D(starRas, searchPosition);","vec4 starDecColor = texture2D(starDecs, searchPosition);","vec4 starMagColor = texture2D(starMags, searchPosition);","vec3 starColor = texture2D(starColors, searchPosition).rgb;","float starRa = rgba2Float(starRaColor);","float starDec = -1.0 * rgba2Float(starDecColor); ","float magnitude = rgba2Float(starMagColor);","returnColor = clipImageWithAveragedEdge(drawStar(vec2(pixelRa, pixelDec), vec2(starRa, starDec), magnitude, starColor), returnColor);","}","}","}","return returnColor;","}","vec3 totalRayleigh(vec3 lambda){","return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));","}","vec3 simplifiedRayleigh(){","return 0.0005 / vec3(94, 40, 18);","}","float rayleighPhase(float cosTheta){","return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));","}","vec3 totalMie(vec3 lambda, vec3 K, float T){","float c = (0.2 * T ) * 10E-18;","return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;","}","float hgPhase(float cosTheta, float g){","return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));","}","float sunIntensity(float zenithAngleCos){","return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));","}","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","const float W = 1000.0;","vec3 Uncharted2Tonemap(vec3 x){","return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;","}","struct skyparams{","float cosTheta;","vec3 Fex;","float sunE;","vec3 Lin;","float sunfade;","vec4 skyColor;","};","skyparams drawSkyLayer(float azimuthOfPixel, float altitudeOfPixel){","float sunAz = sunPosition.x;","float sunAlt = sunPosition.y;","float zenithAngle = piOver2 - sunAlt; ","float sunX = sin(zenithAngle) * cos(sunAz + pi);","float sunZ = sin(zenithAngle) * sin(sunAz + pi);","float sunY = cos(zenithAngle);","float heightOfSunInSky = 5000.0 * sunZ; ","float sunfade = 1.0-clamp(1.0-exp(heightOfSunInSky/5000.0),0.0,1.0);","float reileighCoefficient = reileigh - (1.0 * (1.0-sunfade));","vec3 floatSunPosition = normalize(vec3(sunX, sunY, sunZ));","float dotOfSunDirectionAndUp = dot(floatSunPosition, up);","float sunE = sunIntensity(dotOfSunDirectionAndUp);","vec3 betaR = simplifiedRayleigh() * reileighCoefficient;","vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;","float sR = rayleighZenithLength / (dotOfSunDirectionAndUp + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));","float sM = mieZenithLength / (dotOfSunDirectionAndUp + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));","vec3 Fex = exp(-(betaR * sR + betaM * sM));","float cosTheta = dot(normalize(vWorldPosition - vec3(0.0)), floatSunPosition);","float rPhase = rayleighPhase(cosTheta*0.5+0.5);","vec3 betaRTheta = betaR * rPhase;","float mPhase = hgPhase(cosTheta, mieDirectionalG);","vec3 betaMTheta = betaM * mPhase;","vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));","Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dotOfSunDirectionAndUp,5.0),0.0,1.0));","vec2 uv = vec2(azimuthOfPixel, (piOver2 - altitudeOfPixel)) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);","vec3 L0 = vec3(0.1) * Fex;","vec3 texColor = (Lin+L0);","texColor *= 0.04 ;","texColor += vec3(0.0,0.001,0.0025)*0.3;","float g_fMaxLuminance = 1.0;","float fLumScaled = 0.1 / luminance;","float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled);","float ExposureBias = fLumCompressed;","vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));","vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);","vec3 color = curr*whiteScale;","vec3 retColor = pow(abs(color),vec3(1.0/(1.2+(1.2*sunfade))));","return skyparams(cosTheta, Fex, sunE, Lin, sunfade, vec4(retColor, 1.0));","}","vec4 drawSunLayer(float azimuthOfPixel, float altitudeOfPixel, skyparams skyParams){","vec4 returnColor = vec4(0.0);","float sunAngularDiameterCos = cos(angularRadiusOfTheSun);","float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002, skyParams.cosTheta);","vec3 L0 = (skyParams.sunE * 19000.0 * skyParams.Fex) * sundisk;","L0 *= 0.04 ;","L0 += vec3(0.0,0.001,0.0025)*0.3;","float g_fMaxLuminance = 1.0;","float fLumScaled = 0.1 / luminance;","float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled);","float ExposureBias = fLumCompressed;","vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));","vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*L0);","vec3 color = curr*whiteScale;","color = pow(color,abs(vec3(1.0/(1.2+(1.2* skyParams.sunfade)))) );","returnColor = vec4(color, sqrt(dot(color, color)) );","return returnColor;","}","void main(){","vec3 pointCoord = normalize(vWorldPosition.xyz);","float altitude = piOver2 - acos(pointCoord.y);","float azimuth = atan(pointCoord.z, pointCoord.x) + pi;","vec4 baseColor = vec4(0.0);","skyparams skyParams = drawSkyLayer(azimuth, altitude);","vec4 skyColor = sunPosition.y > -0.06 ? skyParams.skyColor : vec4(vec3(0.0), 1.0);","skyWithAndWithoutStars starLayerData = starLayerBlending(drawStarLayer(azimuth, altitude, baseColor), skyColor, skyParams.sunE);","vec4 outColor = starLayerData.starLayer;","vec4 sunLayer = mixSunLayer(drawSunLayer(azimuth, altitude, skyParams), outColor);","outColor = sunPosition.y > -0.06 ? sunLayer : outColor;","outColor = moonLayerBlending(drawMoonLayer(azimuth, altitude), starLayerData.starlessLayer, outColor);","\tgl_FragColor = outColor;","}"].join("\n")});var aDynamicSky={latitude:0,longitude:0,radLatitude:0,radLongitude:0,year:0,dayOfTheYear:0,hourInDay:0,julianDay:0,sunPosition:null,deg2Rad:Math.PI/180,update:function(skyData){this.radLatitude=this.latitude*this.deg2Rad;this.radLongitude=this.longitude*this.deg2Rad;this.year=skyData.year;this.daysInYear=this.getDaysInYear();this.dayOfTheYear=skyData.dayOfTheYear;var utcOffsetInSeconds=skyData.utcOffset!=null?skyData.utcOffset*3600:240*this.longitude;var utcDate=new Date(this.year,0);utcDate.setSeconds((this.dayOfTheYear-1)*86400+skyData.timeOffset+utcOffsetInSeconds);this.year=utcDate.getFullYear();this.dayOfTheYear=dynamicSkyEntityMethods.getDayOfTheYearFromYMD(utcDate.getFullYear(),utcDate.getMonth()+1,utcDate.getDate());this.timeInDay=utcDate.getHours()*3600+utcDate.getMinutes()*60+utcDate.getSeconds();this.julianDay=this.calculateJulianDay();this.julianCentury=this.calculateJulianCentury();this.calculateSunAndMoonLongitudeElgonationAndAnomoly();this.calculateNutationAndObliquityInEclipticAndLongitude();this.greenwhichMeanSiderealTime=this.calculateGreenwhichSiderealTime();this.greenwhichApparentSiderealTime=this.calculateApparentSiderealTime();this.localApparentSiderealTime=this.check4GreaterThan360(this.greenwhichApparentSiderealTime+this.longitude);this.localApparentSiderealTimeForUniform=-1*this.localApparentSiderealTime*this.deg2Rad;this.sunPosition=this.getSunPosition();this.moonPosition=this.getMoonPosition();var moonMappingData=this.getMoonTangentSpaceSunlight(this.moonPosition.azimuth,this.moonPosition.altitude,this.sunPosition.azimuth,this.sunPosition.altitude);this.moonMappingTangentSpaceSunlight=moonMappingData.moonTangentSpaceSunlight;this.moonMappingPosition=moonMappingData.moonPosition;this.moonMappingTangent=moonMappingData.moonTangent;this.moonMappingBitangent=moonMappingData.moonBitangent},calculateJulianDay:function(){var fractionalTime=this.timeInDay/86400;var month;var day;var daysInEachMonth=[31,28,31,30,31,30,31,31,30,31,30,31];if(this.daysInYear==366){daysInEachMonth[1]=29}var daysPast=0;var previousMonthsDays=0;for(var m=0;m<12;m++){previousMonthsDays=daysPast;daysPast+=daysInEachMonth[m];if(daysPast>=this.dayOfTheYear){month=m+1;day=this.dayOfTheYear-previousMonthsDays;break}}day=day+fractionalTime;var year=this.year;if(month<=2){year=year-1;month=month+12}var gregorianCutoff=new Date("1582-10-15 12:00:00");var hour=Math.floor(this.timeInDay/3600);var minute=Math.floor(this.timeInDay%3600/60);var second=Math.floor(this.timeInDay%60);var todayAsADate=new Date(year,month,day,hour,minute,second);var B=0;if(todayAsADate>gregorianCutoff){var A=Math.floor(year/100);var B=2-A+Math.floor(A/4)}var julianDay=Math.floor(365.25*(year+4716))+Math.floor(30.6001*(month+1))+day+B-1524.5;return julianDay},check4GreaterThan360:function(inDegrees){var outDegrees=inDegrees%360;if(outDegrees<0){return 360+outDegrees}else if(outDegrees==360){return 0}return outDegrees},checkBetweenMinus90And90:function(inDegs){var outDegs=this.check4GreaterThan360(inDegs+90);return outDegs-90},checkBetweenMinus180And180:function(inDegs){var outDegs=this.check4GreaterThan360(inDegs+180);return outDegs-180},check4GreaterThan2Pi:function(inRads){var outRads=inRads%(2*Math.PI);if(outRads<0){return Math.PI*2+outRads}else if(outRads==Math.PI*2){return 0}return outRads},checkBetweenMinusPiOver2AndPiOver2:function(inRads){var outRads=this.check4GreaterThan2Pi(inRads+Math.PI/2);return outRads-Math.PI/2},checkBetweenMinusPiAndPi:function(inRads){var outRads=this.check4GreaterThan2Pi(inRads+Math.PI);return outRads-Math.PI},calculateJulianCentury(){return(this.julianDay-2451545)/36525},calculateGreenwhichSiderealTime:function(){var julianDayAt0hUTC=Math.trunc(this.julianDay)+.5;var T=(julianDayAt0hUTC-2451545)/36525;var gmsrt=this.check4GreaterThan360(280.46061837+360.98564736629*(this.julianDay-2451545)+T*T*387933e-9-T*T*T/3871e4);return gmsrt},calculateApparentSiderealTime:function(){var nutationInRightAscensionInSeconds=this.nutationInLongitude*3600*Math.cos(this.trueObliquityOfEcliptic*this.deg2Rad)/15;var nutationInRightAscensionInDegs=nutationInRightAscensionInSeconds*360/86400;var gasrt=this.greenwhichMeanSiderealTime+nutationInRightAscensionInDegs;return gasrt},getAzimuthAndAltitude:function(rightAscension,declination){var latitude=this.latitude;var hourAngle=this.check4GreaterThan360(this.localApparentSiderealTime-rightAscension);var hourAngleInRads=hourAngle*this.deg2Rad;var latitudeInRads=latitude*this.deg2Rad;var declinationInRads=declination*this.deg2Rad;var az=Math.atan2(Math.sin(hourAngleInRads),Math.cos(hourAngleInRads)*Math.sin(latitudeInRads)-Math.tan(declinationInRads)*Math.cos(latitudeInRads));var alt=Math.asin(Math.sin(latitudeInRads)*Math.sin(declinationInRads)+Math.cos(latitudeInRads)*Math.cos(declinationInRads)*Math.cos(hourAngleInRads));az=this.check4GreaterThan2Pi(az+Math.PI);alt=this.checkBetweenMinusPiOver2AndPiOver2(alt);return{azimuth:az,altitude:alt}},calculateNutationAndObliquityInEclipticAndLongitude:function(){var T=this.julianCentury;var omega=this.LongitudeOfTheAscendingNodeOfTheMoonsOrbit*this.deg2Rad;var sunsMeanLongitude=this.sunsMeanLongitude*this.deg2Rad;var moonsMeanLongitude=this.moonMeanLongitude*this.deg2Rad;this.nutationInLongitude=(-17.2*Math.sin(omega)-1.32*Math.sin(2*sunsMeanLongitude)-.23*Math.sin(2*moonsMeanLongitude)+.21*Math.sin(omega))/3600;this.deltaObliquityOfEcliptic=(9.2*Math.cos(omega)+.57*Math.cos(2*sunsMeanLongitude)+.1*Math.cos(2*moonsMeanLongitude)-.09*Math.cos(2*omega))/3600;this.meanObliquityOfTheEclipitic=this.astroDegrees2NormalDegs(23,26,21.448)-T*46.815/3600-59e-5*T*T/3600+.001813*T*T*T/3600;this.trueObliquityOfEcliptic=this.meanObliquityOfTheEclipitic+this.deltaObliquityOfEcliptic},getSunPosition:function(){var T=this.julianCentury;var sunsMeanAnomoly=this.sunsMeanAnomoly*this.deg2Rad;var sunsMeanLongitude=this.sunsMeanLongitude;var eccentricityOfEarth=.016708634-42037e-9*T-1.267e-7*T*T;var sunsEquationOfCenter=(1.914602-.004817*T-14e-6*T*T)*Math.sin(sunsMeanAnomoly)+(.019993-101e-6*T)*Math.sin(2*sunsMeanAnomoly)+289e-6*Math.sin(3*sunsMeanAnomoly);var sunsTrueLongitude=(sunsMeanLongitude+sunsEquationOfCenter)*this.deg2Rad;var meanObliquityOfTheEclipitic=this.meanObliquityOfTheEclipitic*this.deg2Rad;var rightAscension=this.check4GreaterThan2Pi(Math.atan2(Math.cos(meanObliquityOfTheEclipitic)*Math.sin(sunsTrueLongitude),Math.cos(sunsTrueLongitude)));var declination=this.checkBetweenMinusPiOver2AndPiOver2(Math.asin(Math.sin(meanObliquityOfTheEclipitic)*Math.sin(sunsTrueLongitude)));this.distanceFromEarthToSun=1.000001018*(1-eccentricityOfEarth*eccentricityOfEarth)/(1+eccentricityOfEarth*Math.cos(sunsEquationOfCenter*this.deg2Rad))*149597871;this.sunsRightAscension=rightAscension/this.deg2Rad;this.sunsDeclination=declination/this.deg2Rad;return this.getAzimuthAndAltitude(this.sunsRightAscension,this.sunsDeclination)},calculateSunAndMoonLongitudeElgonationAndAnomoly:function(){var T=this.julianCentury;this.moonMeanLongitude=this.check4GreaterThan360(218.3164477+481267.88123421*T-.0015786*T*T+T*T*T/538841-T*T*T*T/65194e3);this.moonMeanElongation=this.check4GreaterThan360(297.8501921+445267.1114034*T-.0018819*T*T+T*T*T/545868-T*T*T*T/113065e3);this.moonsMeanAnomaly=this.check4GreaterThan360(134.9633964+477198.8675055*T+.0087414*T*T+T*T*T/69699-T*T*T*T/14712e3);this.moonsArgumentOfLatitude=this.check4GreaterThan360(93.272095+483202.0175233*T-.0036539*T*T-T*T*T/3526e3+T*T*T*T/86331e4);this.LongitudeOfTheAscendingNodeOfTheMoonsOrbit=this.check4GreaterThan360(125.04452-1934.136261*T+.0020708*T*T+T*T*T/45e4);this.sunsMeanAnomoly=this.check4GreaterThan360(357.5291092+35999.0502909*T-1536e-7*T*T+T*T*T/2449e4);this.sunsMeanLongitude=this.check4GreaterThan360(280.46646+36000.76983*T+3032e-7*T*T)},getMoonPosition:function(){var T=this.julianCentury;var moonMeanLongitude=this.check4GreaterThan360(this.moonMeanLongitude);var moonMeanElongation=this.moonMeanElongation;var sunsMeanAnomoly=this.sunsMeanAnomoly;var moonsMeanAnomaly=this.moonsMeanAnomaly;var moonsArgumentOfLatitude=this.check4GreaterThan360(this.moonsArgumentOfLatitude);var a_1=this.check4GreaterThan360(119.75+131.849*T);var a_2=this.check4GreaterThan360(53.09+479264.29*T);var a_3=this.check4GreaterThan360(313.45+481266.484*T);var e_parameter=1-.002516*T-74e-7*T*T;var D_coeficients=[0,2,2,0,0,0,2,2,2,2,0,1,0,2,0,0,4,0,4,2,2,1,1,2,2,4,2,0,2,2,1,2,0,0,2,2,2,4,0,3,2,4,0,2,2,2,4,0,4,1,2,0,1,3,4,2,0,1,2,2];var M_coeficients=[0,0,0,0,1,0,0,-1,0,-1,1,0,1,0,0,0,0,0,0,1,1,0,1,-1,0,0,0,1,0,-1,0,-2,1,2,-2,0,0,-1,0,0,1,-1,2,2,1,-1,0,0,-1,0,1,0,1,0,0,-1,2,1,0,0];var M_prime_coeficients=[1,-1,0,2,0,0,-2,-1,1,0,-1,0,1,0,1,1,-1,3,-2,-1,0,-1,0,1,2,0,-3,-2,-1,-2,1,0,2,0,-1,1,0,-1,2,-1,1,-2,-1,-1,-2,0,1,4,0,-2,0,2,1,-2,-3,2,1,-1,3,-1];var F_coeficients=[0,0,0,0,0,2,0,0,0,0,0,0,0,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,-2,2,0,2,0,0,0,0,0,0,-2,0,0,0,0,-2,-2,0,0,0,0,0,0,0,-2];var l_sum_coeficients=[6288774,1274027,658314,213618,-185116,-114332,58793,57066,53322,45758,-40923,-34720,-30383,15327,-12528,10980,10675,10034,8548,-7888,-6766,-5163,4987,4036,3994,3861,3665,-2689,-2602,2390,-2348,2236,-2120,-2069,2048,-1773,-1595,1215,-1110,-892,-810,759,-713,-700,691,596,549,537,520,-487,-399,-381,351,-340,330,327,-323,299,294,0];var r_sum_coeficients=[-20905355,-3699111,-2955968,-569925,48888,-3149,246158,-152138,-170733,-204586,-129620,108743,104755,10321,0,79661,-34782,-23210,-21636,24208,30824,-8379,-16675,-12831,-10445,-11650,14403,-7003,0,10056,6322,-9884,5751,0,-4950,4130,0,-3958,0,3258,2616,-1897,-2117,2354,0,0,-1423,-1117,-1571,-1739,0,-4421,0,0,0,0,1165,0,0,8752];var sum_l=0;var sum_r=0;for(var i=0;i<D_coeficients.length;i++){var D_coeficient=D_coeficients[i];var M_coeficient=M_coeficients[i];var M_prime_coeficient=M_prime_coeficients[i];var F_coeficient=F_coeficients[i];var l_sum_coeficient=l_sum_coeficients[i];var r_sum_coeficient=r_sum_coeficients[i];var D=D_coeficient*moonMeanElongation;var M=M_coeficient*sunsMeanAnomoly;var Mp=M_prime_coeficient*moonsMeanAnomaly;var F=F_coeficient*moonsArgumentOfLatitude;var sumOfTerms=D+M+Mp+F;var e_coeficient=1;if(Math.abs(M_coeficient)===1){e_coeficient=e_parameter}else if(Math.abs(M_coeficient)===2){e_coeficient=e_parameter*e_parameter}sum_l+=e_coeficient*l_sum_coeficient*Math.sin(this.check4GreaterThan360(sumOfTerms)*this.deg2Rad);sum_r+=e_coeficient*r_sum_coeficient*Math.cos(this.check4GreaterThan360(sumOfTerms)*this.deg2Rad)}D_coeficients=[0,0,0,2,2,2,2,0,2,0,2,2,2,2,2,2,2,0,4,0,0,0,1,0,0,0,1,0,4,4,0,4,2,2,2,2,0,2,2,2,2,4,2,2,0,2,1,1,0,2,1,2,0,4,4,1,4,1,4,2];M_coeficients=[0,0,0,0,0,0,0,0,0,0,-1,0,0,1,-1,-1,-1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,1,0,-1,-2,0,1,1,1,1,1,0,-1,1,0,-1,0,0,0,-1,-2];M_prime_coeficients=[0,1,1,0,-1,-1,0,2,1,2,0,-2,1,0,-1,0,-1,-1,-1,0,0,-1,0,1,1,0,0,3,0,-1,1,-2,0,2,1,-2,3,2,-3,-1,0,0,1,0,1,1,0,0,-2,-1,1,-2,2,-2,-1,1,1,-1,0,0];F_coeficients=[1,1,-1,-1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,3,1,1,1,-1,-1,-1,1,-1,1,-3,1,-3,-1,-1,1,-1,1,-1,1,1,1,1,-1,3,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1];var b_sum_coeficients=[5128122,280602,277693,173237,55413,46271,32573,17198,9266,8822,8216,4324,4200,-3359,2463,2211,2065,-1870,1828,-1794,-1749,-1565,-1491,-1475,-1410,-1344,-1335,1107,1021,833,777,671,607,596,491,-451,439,422,421,-366,-351,331,315,302,-283,-229,223,223,-220,-220,-185,181,-177,176,166,-164,132,-119,115,107];var sum_b=0;for(var i=0;i<D_coeficients.length;i++){var D_coeficient=D_coeficients[i];var M_coeficient=M_coeficients[i];var M_prime_coeficient=M_prime_coeficients[i];var F_coeficient=F_coeficients[i];var b_sum_coeficient=b_sum_coeficients[i];var D=D_coeficient*moonMeanElongation;var M=M_coeficient*sunsMeanAnomoly;var Mp=M_prime_coeficient*moonsMeanAnomaly;var F=F_coeficient*moonsArgumentOfLatitude;var e_coeficient=1;if(Math.abs(M_coeficient)===1){e_coeficient=e_parameter}else if(Math.abs(M_coeficient)===2){e_coeficient=e_parameter*e_parameter}sum_b+=e_coeficient*b_sum_coeficient*Math.sin(this.check4GreaterThan360(D+M+Mp+F)*this.deg2Rad)}var moonMeanLongitude=this.check4GreaterThan360(moonMeanLongitude);var moonsArgumentOfLatitude=this.check4GreaterThan360(moonsArgumentOfLatitude);var moonsMeanAnomaly=this.check4GreaterThan360(moonsMeanAnomaly);sum_l=sum_l+3958*Math.sin(a_1*this.deg2Rad)+1962*Math.sin((moonMeanLongitude-moonsArgumentOfLatitude)*this.deg2Rad)+318*Math.sin(a_2*this.deg2Rad);sum_b=sum_b-2235*Math.sin(moonMeanLongitude*this.deg2Rad)+382*Math.sin(a_3*this.deg2Rad)+175*Math.sin((a_1-moonsArgumentOfLatitude)*this.deg2Rad)+175*Math.sin((a_1+moonsArgumentOfLatitude)*this.deg2Rad);sum_b=sum_b+127*Math.sin((moonMeanLongitude-moonsMeanAnomaly)*this.deg2Rad)-115*Math.sin((moonMeanLongitude+moonsMeanAnomaly)*this.deg2Rad);var lambda=moonMeanLongitude+sum_l/1e6;var beta=sum_b/1e6;this.distanceFromEarthToMoon=385000.56+sum_r/1e3;var raAndDec=this.lambdaBetaDegToRaDec(lambda,beta);var rightAscension=raAndDec.rightAscension;var declination=raAndDec.declination;this.moonsRightAscension=rightAscension;this.moonsDeclination=declination;return this.getAzimuthAndAltitude(rightAscension,declination)},getMoonTangentSpaceSunlight(moonAzimuth,moonAltitude,solarAzimuth,solarAltitude){var moonZenith=Math.PI/2-moonAltitude;var sinMZ=Math.sin(moonZenith);var cosMZ=Math.cos(moonZenith);var sinMA=Math.sin(moonAzimuth);var cosMA=Math.cos(moonAzimuth);var moonXCoordinates=sinMZ*cosMA;var moonYCoordinates=sinMZ*sinMA;var moonZCoordinates=cosMZ;var moonCoordinates=new THREE.Vector3(moonXCoordinates,moonYCoordinates,moonZCoordinates);var sphericalUnitVectors=new THREE.Matrix3;sphericalUnitVectors.set(sinMZ*cosMA,sinMZ*sinMA,cosMZ,cosMZ*cosMA,cosMZ*sinMA,-sinMZ,-sinMA,cosMA,0);var inverseOfSphericalUnitVectors=new THREE.Matrix3;inverseOfSphericalUnitVectors.getInverse(sphericalUnitVectors);var unitRVect=new THREE.Vector3(1,0,0);var unitAzVect=new THREE.Vector3(0,0,1);var moonNormal=unitRVect.applyMatrix3(inverseOfSphericalUnitVectors).normalize().negate().clone();var moonTangent=unitAzVect.applyMatrix3(inverseOfSphericalUnitVectors).normalize().clone();var moonBitangent=moonNormal.clone();moonBitangent.cross(moonTangent);var toTangentMoonSpace=new THREE.Matrix3;toTangentMoonSpace.set(moonTangent.x,moonBitangent.x,moonNormal.x,moonTangent.y,moonBitangent.y,moonNormal.y,moonTangent.z,moonBitangent.z,moonNormal.z);toTangentMoonSpace.transpose();var solarZenith=Math.PI/2-solarAltitude;sinOfSZenith=Math.sin(solarZenith);cosOfSZenith=Math.cos(solarZenith);sinOfSAzimuth=Math.sin(solarAzimuth);cosOfSAzimuth=Math.cos(solarAzimuth);var solarXCoordinates=sinOfSZenith*cosOfSAzimuth;var solarYCoordinates=sinOfSZenith*sinOfSAzimuth;var solarZCoordinates=cosOfSZenith;var solarCoordinates=new THREE.Vector3(solarXCoordinates,solarYCoordinates,solarZCoordinates);solarCoordinates.normalize();var moonTangentSpaceSunlight=solarCoordinates.clone();moonTangentSpaceSunlight.applyMatrix3(toTangentMoonSpace);return{moonTangentSpaceSunlight:moonTangentSpaceSunlight,moonTangent:moonTangent,moonBitangent:moonBitangent,moonPosition:moonCoordinates}},getDaysInYear:function(){var daysInThisYear=dynamicSkyEntityMethods.getIsLeapYear(this.year)?366:365;return daysInThisYear},convert2NormalizedGPUCoords:function(azimuth,altitude){var x=Math.sin(azimuth)*Math.cos(altitude-3*Math.PI/2);var y=Math.sin(azimuth)*Math.sin(altitude-3*Math.PI/2);var z=Math.cos(altitude-3*Math.PI/2);return{x:x,y:y,z:z}},lambdaBetaDegToRaDec:function(lambda,beta){var radLambda=lambda*this.deg2Rad;var radBeta=beta*this.deg2Rad;var epsilon=this.trueObliquityOfEcliptic*this.deg2Rad;var rightAscension=this.check4GreaterThan2Pi(Math.atan2(Math.sin(radLambda)*Math.cos(epsilon)-Math.tan(radBeta)*Math.sin(epsilon),Math.cos(radLambda)));var declination=this.checkBetweenMinusPiOver2AndPiOver2(Math.asin(Math.sin(radBeta)*Math.cos(epsilon)+Math.cos(radBeta)*Math.sin(epsilon)*Math.sin(radLambda)));rightAscension=rightAscension/this.deg2Rad;declination=declination/this.deg2Rad;return{rightAscension:rightAscension,declination:declination}},radsToAstroDegreesString:function(radianVal){var returnObj=this.radsToAstroDegrees(radianVal);return`${returnObj.degrees}°${returnObj.minutes}'${returnObj.seconds}''`},radsToAstroDegrees:function(radianVal){var degreeValue=this.check4GreaterThan360(radianVal/this.deg2Rad);var degrees=Math.trunc(degreeValue);var remainder=Math.abs(degreeValue-degrees);var arcSeconds=3600*remainder;var arcMinutes=Math.floor(arcSeconds/60);arcSeconds=arcSeconds%60;return{degrees:degrees,minutes:arcMinutes,seconds:arcSeconds}},astroDegrees2Rads:function(degrees,arcminutes,arcseconds){return this.deg2Rad*this.astroDegrees2NormalDegs(degrees,arcminutes,arcseconds)},astroDegrees2NormalDegs:function(degrees,arcminutes,arcseconds){var fractDegrees=0;if(degrees!==0){fractDegrees=this.check4GreaterThan360(Math.sign(degrees)*(Math.abs(degrees)+arcminutes/60+arcseconds/3600))}else if(arcminutes!==0){fractDegrees=this.check4GreaterThan360(Math.sign(arcminutes)*(Math.abs(arcminutes)/60+arcseconds/3600))}else if(arcseconds!==0){fractDegrees=this.check4GreaterThan360(arcseconds/3600)}return fractDegrees},radToHoursMinutesSecondsString:function(radianVal){var returnObj=this.radToHoursMinutesSeconds(radianVal);return`${returnObj.hours}:${returnObj.minutes}:${returnObj.seconds}`},radToHoursMinutesSeconds:function(radianVal){var degreeValue=this.check4GreaterThan360(radianVal/this.deg2Rad);var fractionalHours=degreeValue/15;var hours=Math.floor(fractionalHours);var remainder=fractionalHours-hours;var totalSeconds=remainder*3600;var minutes=Math.floor(totalSeconds/60);var seconds=totalSeconds%60;return{hours:hours,minutes:minutes,seconds:seconds,addSeconds:function(seconds){this.seconds+=seconds;if(this.seconds>60){this.minutes+=Math.floor(this.seconds/60);this.seconds=this.seconds%60}if(this.minutes>60){this.hours+=Math.floor(this.minutes/60);this.hours=this.hours%24;this.minutes=this.minutes%60}}}},astroHoursMinuteSeconds2Degs:function(hours,minutes,seconds){return 360*(hours*3600+minutes*60+seconds)/86400}};var dynamicSkyEntityMethods={currentDate:new Date,getDayOfTheYear:function(){var month=this.currentDate.getMonth()+1;var dayOfThisMonth=this.currentDate.getDate();var year=this.currentDate.getFullYear();return this.getDayOfTheYearFromYMD(year,month,dayOfThisMonth)},getNowFromData:function(data){var outDate=new Date(data.year,0);outDate.setDate(data.dayOfTheYear);outDate.setSeconds(data.timeOffset);return new Date(outDate)},getDayOfTheYearFromYMD:function(year,month,day){var daysInEachMonth=[31,28,31,30,31,30,31,31,30,31,30,31];if(year==0||year%4==0){daysInEachMonth[1]=29}var currentdayOfTheYear=0;for(var m=0;m<month-1;m++){currentdayOfTheYear+=daysInEachMonth[m]}currentdayOfTheYear+=day;return currentdayOfTheYear.toString()},getIsLeapYear:function(year){if((year%4==0||year==0)&&(year%100==0&&year%400==0||year%100!=0)){return true}return false},getSecondOfDay:function(){var midnightOfPreviousDay=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),this.currentDate.getDate(),0,0,0);return(this.currentDate-midnightOfPreviousDay)/1e3},getYear:function(){return Math.trunc(this.currentDate.getFullYear().toString())}};var meshMixin=AFRAME.primitives.getMeshMixin();AFRAME.registerPrimitive("a-sky-forge",AFRAME.utils.extendDeep({},meshMixin,{defaultComponents:{geometry:{primitive:"sphere",radius:5e3,segmentsWidth:64,segmentsHeight:32},scale:"-1, 1, 1","geo-coordinates":"lat: 37.7749; long: -122.4194","sky-time":`timeOffset: ${Math.round(dynamicSkyEntityMethods.getSecondOfDay())}; utcOffset: 0; timeMultiplier: 1.0; dayOfTheYear: ${Math.round(dynamicSkyEntityMethods.getDayOfTheYear())}; year: ${Math.round(dynamicSkyEntityMethods.getYear())}`}}));AFRAME.registerComponent("geo-coordinates",{schema:{lat:{type:"number",default:37.7749},long:{type:"number",default:-122.4194}}});AFRAME.registerComponent("sky-time",{fractionalSeconds:0,dependencies:["geo-coordinates","a-sky-forge"],schema:{timeOffset:{type:"number",default:dynamicSkyEntityMethods.getSecondOfDay()},timeMultiplier:{type:"number",default:1},utcOffset:{type:"int",default:0},dayOfTheYear:{type:"int",default:Math.round(dynamicSkyEntityMethods.getDayOfTheYear())},month:{type:"int",default:-1},day:{type:"int",default:-1},year:{type:"int",default:Math.round(dynamicSkyEntityMethods.getYear())},imgDir:{type:"string",default:"../images/"},moonTexture:{type:"map",default:"moon-dif-1024.png"},moonNormalMap:{type:"map",default:"moon-nor-1024-padded.png"},starMask:{type:"map",default:"padded-starry-sub-data-0.png"},starRas:{type:"map",default:"padded-starry-sub-data-1.png"},starDecs:{type:"map",default:"padded-starry-sub-data-2.png"},starMags:{type:"map",default:"padded-starry-sub-data-3.png"},starColors:{type:"map",default:"padded-starry-sub-data-4.png"}},init:function(){if(this.data.month!=-1&&this.data.day!=-1){this.data.dayOfTheYear=dynamicSkyEntityMethods.getDayOfTheYearFromYMD(this.data.year,this.data.month,this.data.day)}this.lastCameraDirection={x:0,y:0,z:0};this.dynamicSkyObj=aDynamicSky;this.dynamicSkyObj.latitude=this.el.components["geo-coordinates"].data.lat;this.dynamicSkyObj.longitude=this.el.components["geo-coordinates"].data.long;this.dynamicSkyObj.update(this.data);this.el.components.material.material.uniforms.sunPosition.value.set(this.dynamicSkyObj.sunPosition.azimuth,this.dynamicSkyObj.sunPosition.altitude);var textureLoader=new THREE.TextureLoader;var moonTexture=textureLoader.load(this.data.imgDir+this.data.moonTexture);var moonNormalMap=textureLoader.load(this.data.imgDir+this.data.moonNormalMap);var starMask=textureLoader.load(this.data.imgDir+this.data.starMask,function(starMask){starMask.magFilter=THREE.NearestFilter;starMask.minFilter=THREE.NearestFilter;starMask.wrapS=THREE.RepeatWrapping;starMask.wrapW=THREE.MirroredRepeatWrapping;starMask.needsUpdate=true});var starRas=textureLoader.load(this.data.imgDir+this.data.starRas,function(starRas){starRas.magFilter=THREE.NearestFilter;starRas.minFilter=THREE.NearestFilter;starRas.wrapS=THREE.RepeatWrapping;starRas.wrapW=THREE.MirroredRepeatWrapping;starRas.needsUpdate=true});var starDecs=textureLoader.load(this.data.imgDir+this.data.starDecs,function(starDecs){starDecs.magFilter=THREE.NearestFilter;starDecs.minFilter=THREE.NearestFilter;starDecs.wrapS=THREE.RepeatWrapping;starDecs.wrapW=THREE.MirroredRepeatWrapping;starDecs.needsUpdate=true});var starMags=textureLoader.load(this.data.imgDir+this.data.starMags,function(starMags){starMags.magFilter=THREE.NearestFilter;starMags.minFilter=THREE.NearestFilter;starMags.wrapS=THREE.RepeatWrapping;starMags.wrapW=THREE.MirroredRepeatWrapping;starMags.needsUpdate=true});var starColors=textureLoader.load(this.data.imgDir+this.data.starColors,function(){starColors.magFilter=THREE.NearestFilter;starColors.minFilter=THREE.NearestFilter;starColors.wrapS=THREE.RepeatWrapping;starColors.wrapW=THREE.MirroredRepeatWrapping;starColors.needsUpdate=true});this.el.components.material.material.uniforms.moonTexture.value=moonTexture;this.el.components.material.material.uniforms.moonNormalMap.value=moonNormalMap;this.el.components.material.material.uniforms.starMask.value=starMask;this.el.components.material.material.uniforms.starRas.value=starRas;this.el.components.material.material.uniforms.starDecs.value=starDecs;this.el.components.material.material.uniforms.starMags.value=starMags;this.el.components.material.material.uniforms.starColors.value=starColors;this.el.components.material.material.uniforms.u_resolution.value.set(window.screen.width,window.screen.height);this.currentTime=dynamicSkyEntityMethods.getNowFromData(this.data);this.initializationTime=new Date(this.currentTime.getTime());if(this.data.timeMultiplier!=0){this.hasLinearInterpolation=true;var interpolationLengthInSeconds=300>this.data.timeMultiplier?300/this.data.timeMultiplier:1;this.interpolator=new aSkyInterpolator(this.initializationTime,this.data.timeMultiplier,interpolationLengthInSeconds,this.dynamicSkyObj,this.data);this.interpolator.setLinearInterpolationForScalar("sunAzimuth",["sunPosition","azimuth"],false);this.interpolator.setLinearInterpolationForScalar("sunAltitude",["sunPosition","altitude"],false);this.interpolator.setAngularLinearInterpolationForScalar("localSiderealTime",["localApparentSiderealTimeForUniform"],false);this.interpolator.setSLERPFor3Vect("moonMappingTangentSpaceSunlight",["moonMappingTangentSpaceSunlight"],false);this.interpolator.setSLERPFor3Vect("moonMappingPosition",["moonMappingPosition"],false);this.interpolator.setSLERPFor3Vect("moonMappingTangent",["moonMappingTangent"],false);this.interpolator.setSLERPFor3Vect("moonMappingBitangent",["moonMappingBitangent"],false);this.interpolator.primeBuffer()}else{this.hasLinearInterpolation=false}},update:function(){this.fractionalSeconds=0},tick:function(time,timeDelta){this.el.components.material.material.uniforms.uTime.value=time;if(this.hasLinearInterpolation){this.currentTime.setTime(this.initializationTime.getTime()+time*this.data.timeMultiplier);var interpolatedValues=this.interpolator.getValues(this.currentTime);this.el.components.material.material.uniforms.sunPosition.value.set(interpolatedValues.sunAzimuth,interpolatedValues.sunAltitude);this.el.components.material.material.uniforms.localSiderealTime.value=interpolatedValues.localSiderealTime;var mtss=interpolatedValues.moonMappingTangentSpaceSunlight;var mp=interpolatedValues.moonMappingPosition;var mmt=interpolatedValues.moonMappingTangent;var mmb=interpolatedValues.moonMappingBitangent;this.el.components.material.material.uniforms.moonTangentSpaceSunlight.value.set(mtss.x,mtss.y,mtss.z);this.el.components.material.material.uniforms.moonPosition.value.set(mp.x,mp.y,mp.z);this.el.components.material.material.uniforms.moonTangent.value.set(mmt.x,mmt.y,mmt.z);this.el.components.material.material.uniforms.moonBitangent.value.set(mmb.x,mmb.y,mmb.z)}}});var aSkyInterpolator=function(initializationTime,timeMultiplier,interpolationLengthInSeconds,dynamicSkyObject,originalSkyData){var self=this;this.skyDataObjects=[];this.skyDataTimes=[];this.skyDataFromTime=function(time,timerID){if(self.skyDataObjects[timerID]===undefined){self.skyDataObjects[timerID]=JSON.parse(self.skyDataObjectString)}if(self.skyDataTimes[timerID]===undefined){self.skyDataTimes[timerID]=self.initializationTime.getTime()}var skyDataClone=self.skyDataObjects[timerID];var timeDiffInSeconds=(time.getTime()-self.skyDataTimes[timerID])/1e3;self.skyDataTimes[timerID]=time.getTime();skyDataClone.timeOffset+=timeDiffInSeconds;if(skyDataClone.timeOffset>86400){skyDataClone.dayOfTheYear+=1;skyDataClone.timeOffset=skyDataClone.timeOffset%86400;if(skyDataClone.dayOfTheYear>skyDataClone.yearPeriod){skyDataClone.dayOfTheYear=1;skyDataClone.year+=1}}return skyDataClone};this.searchForVariable=function(objectPathRef,nestedArray){var objectPath=objectPathRef.slice(0);var returnValue=null;if(objectPath.length>1){var currentVarName=objectPath.shift();returnValue=self.searchForVariable(objectPath,nestedArray[currentVarName])}else{returnValue=nestedArray[objectPath[0]]}return returnValue};this.setSLERPFor3Vect=function(name,objectPath,isBuffered,callback=false){var currentInterpolation;var t_0;var t_f;if(isBuffered){interpolations=self.bufferedInterpolations;t_0=self.finalTime.getTime()/1e3;t_f=self.bufferedTime.getTime()/1e3}else{interpolations=self.currentInterpolations;t_0=self.initialTime.getTime()/1e3;t_f=self.finalTime.getTime()/1e3}var vec_0=self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_0).clone();var vec_f=self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_f).clone();var timeNormalizer=1/(t_f-t_0);var omega=vec_0.angleTo(vec_f);var vec_0_array=vec_0.toArray();var vec_f_array=vec_f.toArray();var coeficient_a=[];var coeficient_b=[];for(var i=0;i<vec_0_array.length;i++){coeficient_a.push(vec_0_array[i]/Math.sin(omega));coeficient_b.push(vec_f_array[i]/Math.sin(omega))}interpolations[name]={objectPath:objectPath.splice(0),setFunction:self.setSLERPFor3Vect,callback:callback,coeficient_a:coeficient_a,coeficient_b:coeficient_b,omega:omega,timeNormalizer:timeNormalizer,t_0:t_0,interpolate:callback?function(time){var normalizedTime=(time-this.t_0)*this.timeNormalizer;var slerpArray=[];for(var i=0;i<coeficient_a.length;i++){slerpArray.push(Math.sin((1-normalizedTime)*this.omega)*this.coeficient_a[i]+Math.sin(normalizedTime*this.omega)*this.coeficient_b[i])}var returnVect=new THREE.Vector3(slerpArray[0],slerpArray[1],slerpArray[2]);return this.callback(returnVect)}:function(time){var normalizedTime=(time-this.t_0)*this.timeNormalizer;var slerpArray=[];for(var i=0;i<coeficient_a.length;i++){slerpArray.push(Math.sin((1-normalizedTime)*this.omega)*this.coeficient_a[i]+Math.sin(normalizedTime*this.omega)*this.coeficient_b[i])}var returnVect=new THREE.Vector3(slerpArray[0],slerpArray[1],slerpArray[2]);return returnVect}}};this.setAngularLinearInterpolationForScalar=function(name,objectPath,isBuffered,callback=false,offset=0){var currentInterpolation;var t_0;var t_f;if(isBuffered){interpolations=self.bufferedInterpolations;t_0=self.finalTime.getTime()/1e3;t_f=self.bufferedTime.getTime()/1e3}else{interpolations=self.currentInterpolations;t_0=self.initialTime.getTime()/1e3;t_f=self.finalTime.getTime()/1e3}var x_0=JSON.parse(JSON.stringify(self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_0)));var x_f=JSON.parse(JSON.stringify(self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_f)));function modulo(a,b){return a-Math.floor(a/b)*b}var offset=offset;var offsetX0=x_0+offset;var offsetXF=x_f+offset;var diff=offsetXF-offsetX0;var angularDifference=modulo(diff+Math.PI,2*Math.PI)-Math.PI;var timeNormalizer=1/(t_f-t_0);interpolations[name]={objectPath:objectPath.splice(0),setFunction:self.setAngularLinearInterpolationForScalar,callback:callback,offset:offset,offsetX0:offsetX0,interpolate:callback?function(time){var returnVal=offsetX0+(time-t_0)*timeNormalizer*angularDifference;returnVal=returnVal-offset;return this.callback(returnVal)}:function(time){var returnVal=offsetX0+(time-t_0)*timeNormalizer*angularDifference;returnVal=returnVal-offset;return returnVal}}};this.setLinearInterpolationForScalar=function(name,objectPath,isBuffered,callback=false){var currentInterpolation;var t_0;var t_f;if(isBuffered){interpolations=self.bufferedInterpolations;t_0=self.finalTime.getTime()/1e3;t_f=self.bufferedTime.getTime()/1e3}else{interpolations=self.currentInterpolations;t_0=self.initialTime.getTime()/1e3;t_f=self.finalTime.getTime()/1e3}var x_0=JSON.parse(JSON.stringify(self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_0)));var x_f=JSON.parse(JSON.stringify(self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_f)));var slope=(x_f-x_0)/(t_f-t_0);var intercept=x_0-slope*t_0;interpolations[name]={objectPath:objectPath.splice(0),setFunction:self.setLinearInterpolationForScalar,slope:slope,intercept:intercept,callback:callback,interpolate:callback?function(time){return this.callback(this.slope*time+this.intercept)}:function(time){return this.slope*time+this.intercept}}};this.setLinearInterpolationForVect=function(name,objectPath,isBuffered,callback=false){var currentInterpolation;var t_0;var t_f;if(isBuffered){interpolations=self.bufferedInterpolations;t_0=self.finalTime.getTime()/1e3;t_f=self.bufferedTime.getTime()/1e3}else{interpolations=self.currentInterpolations;t_0=self.initialTime.getTime()/1e3;t_f=self.finalTime.getTime()/1e3}var vec_0=self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_0).toArray();var vec_f=self.searchForVariable(objectPath,self.dynamicSkyObjectAt_t_f).toArray();var slope=[];var intercept=[];var slopeDenominator=1/(t_f-t_0);var vectorLength=vec_0.length;for(var i=0;i<vectorLength;i++){slope.push((vec_f[i]-vec_0[i])*slopeDenominator);intercept.push(vec_0[i]-slope[i]*t_0)}interpolations[name]={objectPath:objectPath.splice(0),setFunction:self.setLinearInterpolationForVect,callback:callback,slope:slope.splice(0),intercept:intercept.splice(0),interpolate:callback?function(time){var returnArray=[];for(i=0;i<vectorLength;i++){returnArray.push(this.slope[i]*time+this.intercept[i])}var returnVect;if(vectorLength==2){returnVect=new THREE.Vector2(returnArray[0],returnArray[1])}else if(vectorLength==3){returnVect=new THREE.Vector3(returnArray[0],returnArray[1],returnArray[2])}else{returnVect=new THREE.Vector4(returnArray[0],returnArray[1],returnArray[2],returnArray[3])}return this.callback(returnVect)}:function(time){var returnArray=[];for(i=0;i<vectorLength;i++){returnArray.push(this.slope[i]*time+this.intercept[i])}var returnVect;if(vectorLength==2){returnVect=new THREE.Vector2(returnArray[0],returnArray[1])}else if(vectorLength==3){returnVect=new THREE.Vector3(returnArray[0],returnArray[1],returnArray[2])}else{returnVect=new THREE.Vector4(returnArray[0],returnArray[1],returnArray[2],returnArray[3])}return returnVect}}};this.getValues=function(time){var requestBufferUpdate=false;if(time>self.finalTime){self.currentInterpolations=cloner.deep.copy(self.bufferedInterpolations);requestBufferUpdate=true}var interpolatedValues={};for(var varName in self.currentInterpolations){var outVarValue=self.currentInterpolations[varName].interpolate(time.getTime()/1e3);interpolatedValues[varName]=outVarValue}if(self.bufferHasRunForTesting&&self.numberOfTestRuns<10){self.numberOfTestRuns+=1}if(requestBufferUpdate){self.initialTime=new Date(time.getTime());self.finalTime=new Date(time.getTime()+self.interpolationLengthInSeconds*1e3*self.timeMultiplier);self.bufferedTime=new Date(self.finalTime.getTime()+self.interpolationLengthInSeconds*1e3*self.timeMultiplier);self.primeBuffer()}return interpolatedValues};this.primeBuffer=async function(){var skytime_0=self.skyDataFromTime(self.finalTime,2);var skytime_f=self.skyDataFromTime(self.bufferedTime,3);self.dynamicSkyObjectAt_t_0.update(skytime_0);self.dynamicSkyObjectAt_t_f.update(skytime_f);for(var name in self.currentInterpolations){if(self.currentInterpolations[name].callback){self.currentInterpolations[name].setFunction(name,self.currentInterpolations[name].objectPath,true,self.currentInterpolations[name].callback)}else{self.currentInterpolations[name].setFunction(name,self.currentInterpolations[name].objectPath,true)}}self.bufferHasRunForTesting=true};this.timeMultiplier=timeMultiplier;this.interpolationLengthInSeconds=interpolationLengthInSeconds;this.interpolationCount=1;this.initializationTime=initializationTime;this.initializationMilliseconds=initializationTime.getTime();this.initialTime=new Date(initializationTime.getTime());this.finalTime=new Date(initializationTime.getTime()+interpolationLengthInSeconds*this.timeMultiplier*1e3);this.bufferedTime=new Date(initializationTime.getTime()+interpolationLengthInSeconds*this.timeMultiplier*2e3);this.skyDataObjectString=JSON.stringify(originalSkyData);this.dynamicSkyObjectAt_t_0=cloner.deep.copy(dynamicSkyObject);this.dynamicSkyObjectAt_t_0.update(this.skyDataFromTime(this.initialTime,0));this.dynamicSkyObjectAt_t_f=cloner.deep.copy(dynamicSkyObject);this.dynamicSkyObjectAt_t_f.update(this.skyDataFromTime(this.finalTime,1));this.currentInterpolations={};this.bufferedInterpolations={};self.numberOfTestRuns=1;self.bufferHasRunForTesting=false};
