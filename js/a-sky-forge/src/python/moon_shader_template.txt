//This helps
//--------------------------v
//https://github.com/mrdoob/three.js/wiki/Uniforms-types
var moonShaderMaterial = new THREE.ShaderMaterial({
  uniforms: {
    rayleighCoefficientOfSun: {type: 'f', value: 0.0},
    rayleighCoefficientOfMoon: {type: 'f',value: 0.0},
    sunFade: {type: 'f',value: 0.0},
    moonFade: {type: 'f',value: 0.0},
    luminance: {type: 'f',value: 0.0},
    mieDirectionalG: {type: 'f',value: 0.0},
    moonE: {type: 'f',value: 0.0},
    earthshineE: {type: 'f', value: 0.0},
    sunE: {type: 'f',value: 0.0},
    linMoonCoefficient2: {type: 'f',value: 0.0},
    linSunCoefficient2: {type: 'f',value: 0.0},
    moonExposure: {type: 'f', value: 0.0},
    betaM: {type: 'v3',value: new THREE.Vector3()},
    sunXYZPosition: {type: 'v3', value: new THREE.Vector3()},
    betaRSun: {type: 'v3', value: new THREE.Vector3()},
    betaRMoon: {type: 'v3', value: new THREE.Vector3()},
    moonTangentSpaceSunlight: {type: 'v3', value: new THREE.Vector3()},
    moonXYZPosition: {type: 'v3', value: new THREE.Vector3()},
    moonTexture: {type: 't', value: null},
    moonNormalMap: {type: 't', value: null},
    bayerMatrix: {type: 't', value: null}
  },

  transparent: true,
  lights: false,
  flatShading: true,
  clipping: true,

  vertexShader: [
    {vertex_glsl}
  ].join('\n'),

  fragmentShader: [
    {fragment_glsl}
  ].join('\n')
});
